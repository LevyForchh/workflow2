#
# Autogenerated by Thrift Compiler (0.8.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'hank_types'

module SmartClient
  class Client
    include ::Thrift::Client

    def get(domain_name, key)
      send_get(domain_name, key)
      return recv_get()
    end

    def send_get(domain_name, key)
      send_message('get', Get_args, :domain_name => domain_name, :key => key)
    end

    def recv_get()
      result = receive_message(Get_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'get failed: unknown result')
    end

    def getBulk(domain_name, keys)
      send_getBulk(domain_name, keys)
      return recv_getBulk()
    end

    def send_getBulk(domain_name, keys)
      send_message('getBulk', GetBulk_args, :domain_name => domain_name, :keys => keys)
    end

    def recv_getBulk()
      result = receive_message(GetBulk_result)
      return result.success unless result.success.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'getBulk failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_get(seqid, iprot, oprot)
      args = read_args(iprot, Get_args)
      result = Get_result.new()
      result.success = @handler.get(args.domain_name, args.key)
      write_result(result, oprot, 'get', seqid)
    end

    def process_getBulk(seqid, iprot, oprot)
      args = read_args(iprot, GetBulk_args)
      result = GetBulk_result.new()
      result.success = @handler.getBulk(args.domain_name, args.keys)
      write_result(result, oprot, 'getBulk', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Get_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN_NAME = 1
    KEY = 2

    FIELDS = {
      DOMAIN_NAME => {:type => ::Thrift::Types::STRING, :name => 'domain_name'},
      KEY => {:type => ::Thrift::Types::STRING, :name => 'key', :binary => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class Get_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => HankResponse}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetBulk_args
    include ::Thrift::Struct, ::Thrift::Struct_Union
    DOMAIN_NAME = 1
    KEYS = 2

    FIELDS = {
      DOMAIN_NAME => {:type => ::Thrift::Types::STRING, :name => 'domain_name'},
      KEYS => {:type => ::Thrift::Types::LIST, :name => 'keys', :element => {:type => ::Thrift::Types::STRING, :binary => true}}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class GetBulk_result
    include ::Thrift::Struct, ::Thrift::Struct_Union
    SUCCESS = 0

    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => HankBulkResponse}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end

