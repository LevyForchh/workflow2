#
# Autogenerated by Thrift Compiler (0.8.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


class HankException < ::Thrift::Union
  include ::Thrift::Struct_Union
  class << self
    def wrong_host(val)
      HankException.new(:wrong_host, val)
    end

    def no_such_domain(val)
      HankException.new(:no_such_domain, val)
    end

    def no_connection_available(val)
      HankException.new(:no_connection_available, val)
    end

    def failed_retries(val)
      HankException.new(:failed_retries, val)
    end

    def internal_error(val)
      HankException.new(:internal_error, val)
    end
  end

  WRONG_HOST = 1
  NO_SUCH_DOMAIN = 2
  NO_CONNECTION_AVAILABLE = 3
  FAILED_RETRIES = 4
  INTERNAL_ERROR = 5

  FIELDS = {
    # The host queried is not assigned the key that was requested
    WRONG_HOST => {:type => ::Thrift::Types::BOOL, :name => 'wrong_host'},
    # The domain passed in the request does not correspond to a valid domain
    NO_SUCH_DOMAIN => {:type => ::Thrift::Types::BOOL, :name => 'no_such_domain'},
    # There were no available connections for a given partition
    NO_CONNECTION_AVAILABLE => {:type => ::Thrift::Types::BOOL, :name => 'no_connection_available'},
    # Failed to perform query after a specified number of retries
    FAILED_RETRIES => {:type => ::Thrift::Types::I32, :name => 'failed_retries'},
    # There was some internal error in the server. This is pretty bad.
    INTERNAL_ERROR => {:type => ::Thrift::Types::STRING, :name => 'internal_error'}
  }

  def struct_fields; FIELDS; end

  def validate
    raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
  end

  ::Thrift::Union.generate_accessors self
end

class HankResponse < ::Thrift::Union
  include ::Thrift::Struct_Union
  class << self
    def not_found(val)
      HankResponse.new(:not_found, val)
    end

    def value(val)
      HankResponse.new(:value, val)
    end

    def xception(val)
      HankResponse.new(:xception, val)
    end
  end

  NOT_FOUND = 1
  VALUE = 2
  XCEPTION = 3

  FIELDS = {
    NOT_FOUND => {:type => ::Thrift::Types::BOOL, :name => 'not_found'},
    VALUE => {:type => ::Thrift::Types::STRING, :name => 'value', :binary => true},
    XCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'xception', :class => HankException}
  }

  def struct_fields; FIELDS; end

  def validate
    raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
  end

  ::Thrift::Union.generate_accessors self
end

class HankBulkResponse < ::Thrift::Union
  include ::Thrift::Struct_Union
  class << self
    def responses(val)
      HankBulkResponse.new(:responses, val)
    end

    def xception(val)
      HankBulkResponse.new(:xception, val)
    end
  end

  RESPONSES = 1
  XCEPTION = 2

  FIELDS = {
    RESPONSES => {:type => ::Thrift::Types::LIST, :name => 'responses', :element => {:type => ::Thrift::Types::STRUCT, :class => HankResponse}},
    XCEPTION => {:type => ::Thrift::Types::STRUCT, :name => 'xception', :class => HankException}
  }

  def struct_fields; FIELDS; end

  def validate
    raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
  end

  ::Thrift::Union.generate_accessors self
end

