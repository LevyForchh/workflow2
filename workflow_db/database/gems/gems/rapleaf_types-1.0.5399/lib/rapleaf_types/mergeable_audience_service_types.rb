#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'aif_connector_types'
require File.join File.dirname(__FILE__), 'anonymous_records_types'
require File.join File.dirname(__FILE__), 'bang_types'
require File.join File.dirname(__FILE__), 'new_person_data_types'


module Liveramp
  module MergeableAudiences
    class MergeableAif; end

    class AudienceElement; end

    class MergeableAif
      include ::Thrift::Struct, ::Thrift::Struct_Union
      AIF = 1
      METADATAS = 2

      FIELDS = {
        AIF => {:type => ::Thrift::Types::STRUCT, :name => 'aif', :class => ::Liveramp::Types::AIFConnector::AnonymouslyIdentifiedFields},
        METADATAS => {:type => ::Thrift::Types::SET, :name => 'metadatas', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::AnonymousRecords::AnonymousRecordMetadata}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field aif is unset!') unless @aif
      end

      ::Thrift::Struct.generate_accessors self
    end

    class AudienceElement
      include ::Thrift::Struct, ::Thrift::Struct_Union
      IDENTIFIER = 1
      FIELDS = 2
      METADATAS = 3
      HASHED_IDENTIFIER_KEY = 4

      FIELDS = {
        IDENTIFIER => {:type => ::Thrift::Types::STRUCT, :name => 'identifier', :class => ::Liveramp::Types::Bang::AnonymousIdentifier},
        FIELDS => {:type => ::Thrift::Types::LIST, :name => 'fields', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::NewPersonData::LRCField}},
        METADATAS => {:type => ::Thrift::Types::SET, :name => 'metadatas', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::AnonymousRecords::AnonymousRecordMetadata}},
        HASHED_IDENTIFIER_KEY => {:type => ::Thrift::Types::STRING, :name => 'hashed_identifier_key', :binary => true, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field identifier is unset!') unless @identifier
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field fields is unset!') unless @fields
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field metadatas is unset!') unless @metadatas
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
