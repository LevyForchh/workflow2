#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'custom_id_types'
require File.join File.dirname(__FILE__), 'new_person_data_types'
require File.join File.dirname(__FILE__), 'audience_types'


module Liveramp
  module Types
    module CustomIdFieldPack
      class AudienceData; end

      class ClientSideAudienceData; end

      class CustomIdFieldPack; end

      class AudienceData
        include ::Thrift::Struct, ::Thrift::Struct_Union
        FIELDS = 1
        HASHED_AUDIENCE_KEY = 2
        AUDIENCE_VERSION = 3

        FIELDS = {
          FIELDS => {:type => ::Thrift::Types::LIST, :name => 'fields', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::NewPersonData::LRCField}},
          HASHED_AUDIENCE_KEY => {:type => ::Thrift::Types::STRING, :name => 'hashed_audience_key', :binary => true},
          AUDIENCE_VERSION => {:type => ::Thrift::Types::I32, :name => 'audience_version'}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field fields is unset!') unless @fields
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hashed_audience_key is unset!') unless @hashed_audience_key
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field audience_version is unset!') unless @audience_version
        end

        ::Thrift::Struct.generate_accessors self
      end

      class ClientSideAudienceData
        include ::Thrift::Struct, ::Thrift::Struct_Union
        AUDIENCE_DATA_BY_AUDIENCE_ID = 1

        FIELDS = {
          AUDIENCE_DATA_BY_AUDIENCE_ID => {:type => ::Thrift::Types::MAP, :name => 'audience_data_by_audience_id', :key => {:type => ::Thrift::Types::I64}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::Types::CustomIdFieldPack::AudienceData}}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field audience_data_by_audience_id is unset!') unless @audience_data_by_audience_id
        end

        ::Thrift::Struct.generate_accessors self
      end

      class CustomIdFieldPack
        include ::Thrift::Struct, ::Thrift::Struct_Union
        CUSTOM_ID = 1
        PACK = 2
        RESTRICTED = 3

        FIELDS = {
          CUSTOM_ID => {:type => ::Thrift::Types::STRUCT, :name => 'custom_id', :class => ::Liveramp::Types::CustomId::CustomId},
          PACK => {:type => ::Thrift::Types::STRUCT, :name => 'pack', :class => ::Liveramp::Types::CustomIdFieldPack::ClientSideAudienceData},
          # If this PEL is opted out, this will be set.
          RESTRICTED => {:type => ::Thrift::Types::BOOL, :name => 'restricted', :optional => true}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field custom_id is unset!') unless @custom_id
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field pack is unset!') unless @pack
        end

        ::Thrift::Struct.generate_accessors self
      end

    end
  end
end
