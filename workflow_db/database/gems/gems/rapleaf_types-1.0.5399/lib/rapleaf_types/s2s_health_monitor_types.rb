#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Liveramp
  module S2s
    module HealthMonitor
      module S2sProcess
        BATCH = 1
        STREAMING = 2
        CLIENT_SIDE = 3
        TEST_RUNNER = 4
        FORMATTER = 5
        PACKAGER = 6
        DELIVERER = 7
        STREAMING_ENQUEUER = 8
        LOG_MOVER = 9
        JOB_COORDINATOR = 10
        TEST_GENERATOR = 11
        VALUE_MAP = {1 => "BATCH", 2 => "STREAMING", 3 => "CLIENT_SIDE", 4 => "TEST_RUNNER", 5 => "FORMATTER", 6 => "PACKAGER", 7 => "DELIVERER", 8 => "STREAMING_ENQUEUER", 9 => "LOG_MOVER", 10 => "JOB_COORDINATOR", 11 => "TEST_GENERATOR"}
        VALID_VALUES = Set.new([BATCH, STREAMING, CLIENT_SIDE, TEST_RUNNER, FORMATTER, PACKAGER, DELIVERER, STREAMING_ENQUEUER, LOG_MOVER, JOB_COORDINATOR, TEST_GENERATOR]).freeze
      end

      class S2sHostStatus; end

      class S2sProcessStatus; end

      class S2sHostStatus
        include ::Thrift::Struct, ::Thrift::Struct_Union
        IS_RUNNING = 1
        UPDATED_AT = 2

        FIELDS = {
          IS_RUNNING => {:type => ::Thrift::Types::BOOL, :name => 'is_running'},
          UPDATED_AT => {:type => ::Thrift::Types::I64, :name => 'updated_at'}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field is_running is unset!') if @is_running.nil?
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field updated_at is unset!') unless @updated_at
        end

        ::Thrift::Struct.generate_accessors self
      end

      class S2sProcessStatus
        include ::Thrift::Struct, ::Thrift::Struct_Union
        HOSTSTATUSES = 1

        FIELDS = {
          HOSTSTATUSES => {:type => ::Thrift::Types::MAP, :name => 'hostStatuses', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::S2s::HealthMonitor::S2sHostStatus}}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hostStatuses is unset!') unless @hostStatuses
        end

        ::Thrift::Struct.generate_accessors self
      end

    end
  end
end
