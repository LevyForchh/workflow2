#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Liveramp
  module Taxonomy
    class EmailOption; end

    class DeliveryProtocolOption < ::Thrift::Union; end

    class DeliveryDetailSpec; end

    class EmailOption
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SENDER = 1
      RECIPIENT = 2
      SUBJECT = 3
      CC = 4
      BCC = 5

      FIELDS = {
        SENDER => {:type => ::Thrift::Types::STRING, :name => 'sender'},
        RECIPIENT => {:type => ::Thrift::Types::STRING, :name => 'recipient'},
        SUBJECT => {:type => ::Thrift::Types::STRING, :name => 'subject'},
        CC => {:type => ::Thrift::Types::STRING, :name => 'cc', :optional => true},
        BCC => {:type => ::Thrift::Types::STRING, :name => 'bcc', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field sender is unset!') unless @sender
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field recipient is unset!') unless @recipient
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field subject is unset!') unless @subject
      end

      ::Thrift::Struct.generate_accessors self
    end

    class DeliveryProtocolOption < ::Thrift::Union
      include ::Thrift::Struct_Union
      class << self
        def email_option(val)
          DeliveryProtocolOption.new(:email_option, val)
        end
      end

      EMAIL_OPTION = 1

      FIELDS = {
        EMAIL_OPTION => {:type => ::Thrift::Types::STRUCT, :name => 'email_option', :class => ::Liveramp::Taxonomy::EmailOption, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
      end

      ::Thrift::Union.generate_accessors self
    end

    class DeliveryDetailSpec
      include ::Thrift::Struct, ::Thrift::Struct_Union
      OPTION = 1
      FILE_NAME = 2
      MESSAGE = 3
      TAXONOMY_DATA = 4

      FIELDS = {
        OPTION => {:type => ::Thrift::Types::STRUCT, :name => 'option', :class => ::Liveramp::Taxonomy::DeliveryProtocolOption},
        FILE_NAME => {:type => ::Thrift::Types::STRING, :name => 'file_name'},
        MESSAGE => {:type => ::Thrift::Types::STRING, :name => 'message', :optional => true},
        TAXONOMY_DATA => {:type => ::Thrift::Types::STRING, :name => 'taxonomy_data'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field option is unset!') unless @option
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field file_name is unset!') unless @file_name
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field taxonomy_data is unset!') unless @taxonomy_data
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
