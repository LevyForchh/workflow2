#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'field_creation_service_types'

module Liveramp
  module Types
    module FieldCreationService
      module RealTimeFieldCreationService
        class Client
          include ::Thrift::Client

          def submit(pars, options)
            send_submit(pars, options)
            return recv_submit()
          end

          def send_submit(pars, options)
            send_message('submit', Submit_args, :pars => pars, :options => options)
          end

          def recv_submit()
            result = receive_message(Submit_result)
            return result.success unless result.success.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'submit failed: unknown result')
          end

        end

        class Processor
          include ::Thrift::Processor

          def process_submit(seqid, iprot, oprot)
            args = read_args(iprot, Submit_args)
            result = Submit_result.new()
            result.success = @handler.submit(args.pars, args.options)
            write_result(result, oprot, 'submit', seqid)
          end

        end

        # HELPER FUNCTIONS AND STRUCTURES

        class Submit_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          PARS = 1
          OPTIONS = 2

          FIELDS = {
            PARS => {:type => ::Thrift::Types::LIST, :name => 'pars', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::Types::PARC::ParsedAnonymizedRecord}},
            OPTIONS => {:type => ::Thrift::Types::STRUCT, :name => 'options', :class => ::Liveramp::Types::FieldCreationService::RealTimeFieldCreationOptions}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Submit_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::Types::AIFConnector::AnonymouslyIdentifiedFields}}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

      end

    end
  end
end
