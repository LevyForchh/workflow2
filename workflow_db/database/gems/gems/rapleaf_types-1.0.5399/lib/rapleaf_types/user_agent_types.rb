#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Liveramp
  module UserAgent
    module DeviceType
      OTHER = 1
      DESKTOP = 2
      MOBILE = 3
      TABLET = 4
      VALUE_MAP = {1 => "OTHER", 2 => "DESKTOP", 3 => "MOBILE", 4 => "TABLET"}
      VALID_VALUES = Set.new([OTHER, DESKTOP, MOBILE, TABLET]).freeze
    end

    module OSType
      OTHER = 1
      WINDOWS_XP = 2
      WINDOWS_VISTA = 3
      WINDOWS_7 = 4
      MAC_OS_X = 5
      LINUX = 6
      ANDROID = 7
      WINDOWS_8 = 8
      WINDOWS_10 = 9
      IOS = 10
      VALUE_MAP = {1 => "OTHER", 2 => "WINDOWS_XP", 3 => "WINDOWS_VISTA", 4 => "WINDOWS_7", 5 => "MAC_OS_X", 6 => "LINUX", 7 => "ANDROID", 8 => "WINDOWS_8", 9 => "WINDOWS_10", 10 => "IOS"}
      VALID_VALUES = Set.new([OTHER, WINDOWS_XP, WINDOWS_VISTA, WINDOWS_7, MAC_OS_X, LINUX, ANDROID, WINDOWS_8, WINDOWS_10, IOS]).freeze
    end

    module BrowserType
      OTHER = 1
      IE = 2
      CHROME = 3
      FIREFOX = 4
      SAFARI = 5
      OPERA = 6
      APPLE_MAIL = 7
      OUTLOOK = 8
      EDGE = 9
      ANDROID = 10
      VALUE_MAP = {1 => "OTHER", 2 => "IE", 3 => "CHROME", 4 => "FIREFOX", 5 => "SAFARI", 6 => "OPERA", 7 => "APPLE_MAIL", 8 => "OUTLOOK", 9 => "EDGE", 10 => "ANDROID"}
      VALID_VALUES = Set.new([OTHER, IE, CHROME, FIREFOX, SAFARI, OPERA, APPLE_MAIL, OUTLOOK, EDGE, ANDROID]).freeze
    end

    class Version; end

    class Browser; end

    class OS; end

    class UserAgent; end

    class Version
      include ::Thrift::Struct, ::Thrift::Struct_Union
      MAJOR = 1
      MINOR = 2

      FIELDS = {
        MAJOR => {:type => ::Thrift::Types::STRING, :name => 'major'},
        MINOR => {:type => ::Thrift::Types::STRING, :name => 'minor'}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field major is unset!') unless @major
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field minor is unset!') unless @minor
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Browser
      include ::Thrift::Struct, ::Thrift::Struct_Union
      TYPE = 1
      VERSION = 2

      FIELDS = {
        TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::Liveramp::UserAgent::BrowserType},
        VERSION => {:type => ::Thrift::Types::STRUCT, :name => 'version', :class => ::Liveramp::UserAgent::Version, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field type is unset!') unless @type
        unless @type.nil? || ::Liveramp::UserAgent::BrowserType::VALID_VALUES.include?(@type)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class OS
      include ::Thrift::Struct, ::Thrift::Struct_Union
      TYPE = 1

      FIELDS = {
        TYPE => {:type => ::Thrift::Types::I32, :name => 'type', :enum_class => ::Liveramp::UserAgent::OSType}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field type is unset!') unless @type
        unless @type.nil? || ::Liveramp::UserAgent::OSType::VALID_VALUES.include?(@type)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field type!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

    class UserAgent
      include ::Thrift::Struct, ::Thrift::Struct_Union
      DEVICE = 1
      OS = 2
      BROWSER = 3

      FIELDS = {
        DEVICE => {:type => ::Thrift::Types::I32, :name => 'device', :enum_class => ::Liveramp::UserAgent::DeviceType},
        OS => {:type => ::Thrift::Types::STRUCT, :name => 'os', :class => ::Liveramp::UserAgent::OS},
        BROWSER => {:type => ::Thrift::Types::STRUCT, :name => 'browser', :class => ::Liveramp::UserAgent::Browser}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field device is unset!') unless @device
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field os is unset!') unless @os
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field browser is unset!') unless @browser
        unless @device.nil? || ::Liveramp::UserAgent::DeviceType::VALID_VALUES.include?(@device)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field device!')
        end
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
