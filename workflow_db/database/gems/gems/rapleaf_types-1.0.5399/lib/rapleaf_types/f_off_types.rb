#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Rapleaf
  module FOff
    class InputOutputValue < ::Thrift::Union; end

    class InputOutput; end

    class FOffSpec; end

    class InputOutputList; end

    class InputOutputValue < ::Thrift::Union
      include ::Thrift::Struct_Union
      class << self
        def string_value(val)
          InputOutputValue.new(:string_value, val)
        end

        def hdfs_path(val)
          InputOutputValue.new(:hdfs_path, val)
        end

        def local_path(val)
          InputOutputValue.new(:local_path, val)
        end

        def number(val)
          InputOutputValue.new(:number, val)
        end

        def date(val)
          InputOutputValue.new(:date, val)
        end

        def boolean_value(val)
          InputOutputValue.new(:boolean_value, val)
        end

        def string_values(val)
          InputOutputValue.new(:string_values, val)
        end

        def hdfs_paths(val)
          InputOutputValue.new(:hdfs_paths, val)
        end

        def local_paths(val)
          InputOutputValue.new(:local_paths, val)
        end

        def numbers(val)
          InputOutputValue.new(:numbers, val)
        end

        def dates(val)
          InputOutputValue.new(:dates, val)
        end

        def boolean_values(val)
          InputOutputValue.new(:boolean_values, val)
        end
      end

      STRING_VALUE = 1
      HDFS_PATH = 2
      LOCAL_PATH = 3
      NUMBER = 4
      DATE = 5
      BOOLEAN_VALUE = 6
      STRING_VALUES = 7
      HDFS_PATHS = 8
      LOCAL_PATHS = 9
      NUMBERS = 10
      DATES = 11
      BOOLEAN_VALUES = 12

      FIELDS = {
        STRING_VALUE => {:type => ::Thrift::Types::STRING, :name => 'string_value', :optional => true},
        HDFS_PATH => {:type => ::Thrift::Types::STRING, :name => 'hdfs_path', :optional => true},
        LOCAL_PATH => {:type => ::Thrift::Types::STRING, :name => 'local_path', :optional => true},
        NUMBER => {:type => ::Thrift::Types::DOUBLE, :name => 'number', :optional => true},
        DATE => {:type => ::Thrift::Types::I64, :name => 'date', :optional => true},
        BOOLEAN_VALUE => {:type => ::Thrift::Types::BOOL, :name => 'boolean_value', :optional => true},
        STRING_VALUES => {:type => ::Thrift::Types::LIST, :name => 'string_values', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        HDFS_PATHS => {:type => ::Thrift::Types::LIST, :name => 'hdfs_paths', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        LOCAL_PATHS => {:type => ::Thrift::Types::LIST, :name => 'local_paths', :element => {:type => ::Thrift::Types::STRING}, :optional => true},
        NUMBERS => {:type => ::Thrift::Types::LIST, :name => 'numbers', :element => {:type => ::Thrift::Types::DOUBLE}, :optional => true},
        DATES => {:type => ::Thrift::Types::LIST, :name => 'dates', :element => {:type => ::Thrift::Types::I64}, :optional => true},
        BOOLEAN_VALUES => {:type => ::Thrift::Types::LIST, :name => 'boolean_values', :element => {:type => ::Thrift::Types::BOOL}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise(StandardError, 'Union fields are not set.') if get_set_field.nil? || get_value.nil?
      end

      ::Thrift::Union.generate_accessors self
    end

    class InputOutput
      include ::Thrift::Struct, ::Thrift::Struct_Union
      NAME = 1
      VALUE = 2

      FIELDS = {
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'},
        VALUE => {:type => ::Thrift::Types::STRUCT, :name => 'value', :class => ::Rapleaf::FOff::InputOutputValue}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field name is unset!') unless @name
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field value is unset!') unless @value
      end

      ::Thrift::Struct.generate_accessors self
    end

    class FOffSpec
      include ::Thrift::Struct, ::Thrift::Struct_Union
      INPUTS = 1
      OUTPUTS = 2
      DESCRIPTION = 3

      FIELDS = {
        INPUTS => {:type => ::Thrift::Types::LIST, :name => 'inputs', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::FOff::InputOutput}},
        OUTPUTS => {:type => ::Thrift::Types::LIST, :name => 'outputs', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::FOff::InputOutput}},
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field inputs is unset!') unless @inputs
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field outputs is unset!') unless @outputs
      end

      ::Thrift::Struct.generate_accessors self
    end

    class InputOutputList
      include ::Thrift::Struct, ::Thrift::Struct_Union
      VALUES = 1

      FIELDS = {
        VALUES => {:type => ::Thrift::Types::LIST, :name => 'values', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::FOff::InputOutput}}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field values is unset!') unless @values
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
