#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'spruce_types'


module Liveramp
  module Distribution
    module External
      class IngestionRecord; end

      class IngestionRecord
        include ::Thrift::Struct, ::Thrift::Struct_Union
        APP = 1
        RUN_SERIAL_ID = 2
        DEVICE_ID = 10
        REFERRER_ID = 11
        PDATA = 12
        TIMESTAMP = 13
        REQUEST_URI = 14

        FIELDS = {
          APP => {:type => ::Thrift::Types::I32, :name => 'app', :optional => true, :enum_class => ::Rapleaf::Types::Spruce::LogApp},
          RUN_SERIAL_ID => {:type => ::Thrift::Types::STRING, :name => 'run_serial_id', :optional => true},
          DEVICE_ID => {:type => ::Thrift::Types::STRING, :name => 'device_id', :optional => true},
          REFERRER_ID => {:type => ::Thrift::Types::I64, :name => 'referrer_id', :optional => true},
          PDATA => {:type => ::Thrift::Types::STRING, :name => 'pdata', :optional => true},
          TIMESTAMP => {:type => ::Thrift::Types::I32, :name => 'timestamp', :optional => true},
          REQUEST_URI => {:type => ::Thrift::Types::STRING, :name => 'request_uri', :optional => true}
        }

        def struct_fields; FIELDS; end

        def validate
          unless @app.nil? || ::Rapleaf::Types::Spruce::LogApp::VALID_VALUES.include?(@app)
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field app!')
          end
        end

        ::Thrift::Struct.generate_accessors self
      end

    end
  end
end
