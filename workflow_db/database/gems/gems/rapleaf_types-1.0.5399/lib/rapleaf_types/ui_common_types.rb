#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Liveramp
  module Ui
    module Common
      module OrderDir
        ASC = 1
        DESC = 2
        VALUE_MAP = {1 => "ASC", 2 => "DESC"}
        VALID_VALUES = Set.new([ASC, DESC]).freeze
      end

      class PaginationParams; end

      class PaginationResponse; end

      class PaginationParams
        include ::Thrift::Struct, ::Thrift::Struct_Union
        PAGE_SIZE = 1
        PAGE_NUMBER = 2
        ORDER_DIRECTION = 3
        SEARCH_QUERY = 4

        FIELDS = {
          PAGE_SIZE => {:type => ::Thrift::Types::I32, :name => 'page_size'},
          PAGE_NUMBER => {:type => ::Thrift::Types::I32, :name => 'page_number'},
          ORDER_DIRECTION => {:type => ::Thrift::Types::I32, :name => 'order_direction', :default =>           1, :enum_class => ::Liveramp::Ui::Common::OrderDir},
          SEARCH_QUERY => {:type => ::Thrift::Types::STRING, :name => 'search_query', :optional => true}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field page_size is unset!') unless @page_size
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field page_number is unset!') unless @page_number
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field order_direction is unset!') unless @order_direction
          unless @order_direction.nil? || ::Liveramp::Ui::Common::OrderDir::VALID_VALUES.include?(@order_direction)
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field order_direction!')
          end
        end

        ::Thrift::Struct.generate_accessors self
      end

      class PaginationResponse
        include ::Thrift::Struct, ::Thrift::Struct_Union
        NUM_TOTAL = 1

        FIELDS = {
          NUM_TOTAL => {:type => ::Thrift::Types::I64, :name => 'num_total'}
        }

        def struct_fields; FIELDS; end

        def validate
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field num_total is unset!') unless @num_total
        end

        ::Thrift::Struct.generate_accessors self
      end

    end
  end
end
