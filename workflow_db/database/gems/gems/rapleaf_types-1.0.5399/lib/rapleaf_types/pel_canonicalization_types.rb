#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'bang_types'
require File.join File.dirname(__FILE__), 'abilitec_types'
require File.join File.dirname(__FILE__), 'new_person_data_types'


module Liveramp
  module PelCanonicalization
    class PelToCanonicalPel; end

    class PelToPel; end

    class ArlToCanonicalPel; end

    class EmailToCanonicalClink; end

    class PelToCanonicalPel
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CANONICAL_PEL = 1
      PEL = 2

      FIELDS = {
        CANONICAL_PEL => {:type => ::Thrift::Types::STRUCT, :name => 'canonical_pel', :class => ::Liveramp::Types::Bang::AnonymousIdentifier},
        PEL => {:type => ::Thrift::Types::STRUCT, :name => 'pel', :class => ::Liveramp::Types::Bang::AnonymousIdentifier}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field canonical_pel is unset!') unless @canonical_pel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field pel is unset!') unless @pel
      end

      ::Thrift::Struct.generate_accessors self
    end

    class PelToPel
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SOURCE = 1
      TARGET = 2

      FIELDS = {
        SOURCE => {:type => ::Thrift::Types::STRUCT, :name => 'source', :class => ::Liveramp::Types::Bang::AnonymousIdentifier},
        TARGET => {:type => ::Thrift::Types::STRUCT, :name => 'target', :class => ::Liveramp::Types::Bang::AnonymousIdentifier}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field source is unset!') unless @source
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field target is unset!') unless @target
      end

      ::Thrift::Struct.generate_accessors self
    end

    class ArlToCanonicalPel
      include ::Thrift::Struct, ::Thrift::Struct_Union
      CANONICAL_PEL = 1
      ARL = 2

      FIELDS = {
        CANONICAL_PEL => {:type => ::Thrift::Types::STRUCT, :name => 'canonical_pel', :class => ::Liveramp::Types::Bang::AnonymousIdentifier},
        ARL => {:type => ::Thrift::Types::STRUCT, :name => 'arl', :class => ::Liveramp::Abilitec::Arl}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field canonical_pel is unset!') unless @canonical_pel
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field arl is unset!') unless @arl
      end

      ::Thrift::Struct.generate_accessors self
    end

    class EmailToCanonicalClink
      include ::Thrift::Struct, ::Thrift::Struct_Union
      EMAIL = 1
      CLINK = 2

      FIELDS = {
        EMAIL => {:type => ::Thrift::Types::STRUCT, :name => 'email', :class => ::Rapleaf::Types::NewPersonData::PIN},
        CLINK => {:type => ::Thrift::Types::STRUCT, :name => 'clink', :class => ::Rapleaf::Types::NewPersonData::PIN}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field email is unset!') unless @email
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field clink is unset!') unless @clink
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
