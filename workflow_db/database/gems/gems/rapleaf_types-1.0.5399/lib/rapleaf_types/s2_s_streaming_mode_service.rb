#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 's2s_integrations_types'

module Rapleaf
  module Types
    module S2SIntegrations
      module S2SStreamingModeService
        class Client
          include ::Thrift::Client

          def verify_adwords_api(ssa_id, click_id, conversion_label)
            send_verify_adwords_api(ssa_id, click_id, conversion_label)
            return recv_verify_adwords_api()
          end

          def send_verify_adwords_api(ssa_id, click_id, conversion_label)
            send_message('verify_adwords_api', Verify_adwords_api_args, :ssa_id => ssa_id, :click_id => click_id, :conversion_label => conversion_label)
          end

          def recv_verify_adwords_api()
            result = receive_message(Verify_adwords_api_result)
            return result.success unless result.success.nil?
            raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'verify_adwords_api failed: unknown result')
          end

        end

        class Processor
          include ::Thrift::Processor

          def process_verify_adwords_api(seqid, iprot, oprot)
            args = read_args(iprot, Verify_adwords_api_args)
            result = Verify_adwords_api_result.new()
            result.success = @handler.verify_adwords_api(args.ssa_id, args.click_id, args.conversion_label)
            write_result(result, oprot, 'verify_adwords_api', seqid)
          end

        end

        # HELPER FUNCTIONS AND STRUCTURES

        class Verify_adwords_api_args
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SSA_ID = 1
          CLICK_ID = 2
          CONVERSION_LABEL = 3

          FIELDS = {
            SSA_ID => {:type => ::Thrift::Types::I64, :name => 'ssa_id'},
            CLICK_ID => {:type => ::Thrift::Types::STRING, :name => 'click_id'},
            CONVERSION_LABEL => {:type => ::Thrift::Types::STRING, :name => 'conversion_label'}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

        class Verify_adwords_api_result
          include ::Thrift::Struct, ::Thrift::Struct_Union
          SUCCESS = 0

          FIELDS = {
            SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::Rapleaf::Types::S2SIntegrations::ApiTestResult}
          }

          def struct_fields; FIELDS; end

          def validate
          end

          ::Thrift::Struct.generate_accessors self
        end

      end

    end
  end
end
