#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'util_types'
require File.join File.dirname(__FILE__), 'servile_types'


module Liveramp
  module SpruceIntegrationTester
    class ReportConfig; end

    class TesterConfig; end

    class TestFailure; end

    class TestResult; end

    class ReportConfig
      include ::Thrift::Struct, ::Thrift::Struct_Union
      REPORT_NAME = 1
      TAGS = 2
      SUPPRESS_LOGS_FOR_PASSED_TESTS = 3

      FIELDS = {
        REPORT_NAME => {:type => ::Thrift::Types::STRING, :name => 'report_name'},
        TAGS => {:type => ::Thrift::Types::MAP, :name => 'tags', :key => {:type => ::Thrift::Types::STRING}, :value => {:type => ::Thrift::Types::STRING}, :optional => true},
        SUPPRESS_LOGS_FOR_PASSED_TESTS => {:type => ::Thrift::Types::BOOL, :name => 'suppress_logs_for_passed_tests', :default => false, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field report_name is unset!') unless @report_name
      end

      ::Thrift::Struct.generate_accessors self
    end

    # The config to be passed to the SpruceIntegrationTesterService.
    class TesterConfig
      include ::Thrift::Struct, ::Thrift::Struct_Union
      HOST = 1
      REPORT_CONFIG = 2

      FIELDS = {
        # host to run tests on.
        HOST => {:type => ::Thrift::Types::STRING, :name => 'host', :optional => true},
        REPORT_CONFIG => {:type => ::Thrift::Types::STRUCT, :name => 'report_config', :class => ::Liveramp::SpruceIntegrationTester::ReportConfig, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TestFailure
      include ::Thrift::Struct, ::Thrift::Struct_Union
      TEST_NAME = 1
      DESCRIPTION = 2
      STACKTRACE = 3

      FIELDS = {
        TEST_NAME => {:type => ::Thrift::Types::STRING, :name => 'test_name'},
        DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description', :optional => true},
        STACKTRACE => {:type => ::Thrift::Types::STRING, :name => 'stacktrace', :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field test_name is unset!') unless @test_name
      end

      ::Thrift::Struct.generate_accessors self
    end

    class TestResult
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 1
      RUN_COUNT = 2
      FAILED_COUNT = 3
      IGNORED_COUNT = 4
      RUN_TIME = 5
      TEST_FAILURES = 6

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::BOOL, :name => 'success'},
        RUN_COUNT => {:type => ::Thrift::Types::I32, :name => 'run_count'},
        FAILED_COUNT => {:type => ::Thrift::Types::I32, :name => 'failed_count'},
        IGNORED_COUNT => {:type => ::Thrift::Types::I32, :name => 'ignored_count'},
        RUN_TIME => {:type => ::Thrift::Types::I64, :name => 'run_time'},
        TEST_FAILURES => {:type => ::Thrift::Types::LIST, :name => 'test_failures', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::SpruceIntegrationTester::TestFailure}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field success is unset!') if @success.nil?
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field run_count is unset!') unless @run_count
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field failed_count is unset!') unless @failed_count
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field ignored_count is unset!') unless @ignored_count
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field run_time is unset!') unless @run_time
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
