#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'spruce_types'
require File.join File.dirname(__FILE__), 'user_agent_types'
require File.join File.dirname(__FILE__), 'custom_id_types'


module Liveramp
  module Attribution
    module GoogleAttributionApiTestRequestStatus
      PENDING = 1
      SUCCESSFUL = 2
      FAILED = 3
      NOTIFIED = 4
      VALUE_MAP = {1 => "PENDING", 2 => "SUCCESSFUL", 3 => "FAILED", 4 => "NOTIFIED"}
      VALID_VALUES = Set.new([PENDING, SUCCESSFUL, FAILED, NOTIFIED]).freeze
    end

    class ClickId; end

    class ClickId
      include ::Thrift::Struct, ::Thrift::Struct_Union
      ANA_ID = 1
      DEVICE_ID = 2
      UID = 3
      TIMESTAMP = 4
      HEID_BY_SUBNETWORKS = 5
      PDATA = 6
      USER_AGENT = 7
      REFERRER_SOURCE = 8
      PEL_BY_SUBNETWORKS = 9

      FIELDS = {
        ANA_ID => {:type => ::Thrift::Types::I32, :name => 'ana_id'},
        DEVICE_ID => {:type => ::Thrift::Types::STRUCT, :name => 'device_id', :class => ::Rapleaf::Types::Spruce::DeviceId},
        UID => {:type => ::Thrift::Types::STRING, :name => 'uid'},
        TIMESTAMP => {:type => ::Thrift::Types::I32, :name => 'timestamp'},
        HEID_BY_SUBNETWORKS => {:type => ::Thrift::Types::MAP, :name => 'heid_by_subnetworks', :key => {:type => ::Thrift::Types::I64}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::Spruce::MatchedHeid}, :optional => true},
        PDATA => {:type => ::Thrift::Types::STRING, :name => 'pdata', :optional => true},
        USER_AGENT => {:type => ::Thrift::Types::STRUCT, :name => 'user_agent', :class => ::Liveramp::UserAgent::UserAgent, :optional => true},
        REFERRER_SOURCE => {:type => ::Thrift::Types::I64, :name => 'referrer_source', :optional => true},
        PEL_BY_SUBNETWORKS => {:type => ::Thrift::Types::MAP, :name => 'pel_by_subnetworks', :key => {:type => ::Thrift::Types::I64}, :value => {:type => ::Thrift::Types::STRUCT, :class => ::Liveramp::Types::CustomId::CustomId}, :optional => true}
      }

      def struct_fields; FIELDS; end

      def validate
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field ana_id is unset!') unless @ana_id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field device_id is unset!') unless @device_id
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field uid is unset!') unless @uid
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field timestamp is unset!') unless @timestamp
      end

      ::Thrift::Struct.generate_accessors self
    end

  end
end
