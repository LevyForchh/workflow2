#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require File.join File.dirname(__FILE__), 'new_person_data_types'


module Liveramp
  module Ingestion
    module Eu
      module Configuration
        class ClinkSet; end

        class HashedEmailToClinks; end

        class ClinkSet
          include ::Thrift::Struct, ::Thrift::Struct_Union
          CLINKS = 1

          FIELDS = {
            CLINKS => {:type => ::Thrift::Types::SET, :name => 'clinks', :element => {:type => ::Thrift::Types::STRUCT, :class => ::Rapleaf::Types::NewPersonData::AbiliTecId}}
          }

          def struct_fields; FIELDS; end

          def validate
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field clinks is unset!') unless @clinks
          end

          ::Thrift::Struct.generate_accessors self
        end

        class HashedEmailToClinks
          include ::Thrift::Struct, ::Thrift::Struct_Union
          HASHED_EMAIL = 1
          CLINKS = 2

          FIELDS = {
            HASHED_EMAIL => {:type => ::Thrift::Types::STRUCT, :name => 'hashed_email', :class => ::Rapleaf::Types::NewPersonData::HashedEmailPIN},
            CLINKS => {:type => ::Thrift::Types::STRUCT, :name => 'clinks', :class => ::Liveramp::Ingestion::Eu::Configuration::ClinkSet}
          }

          def struct_fields; FIELDS; end

          def validate
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field hashed_email is unset!') unless @hashed_email
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Required field clinks is unset!') unless @clinks
          end

          ::Thrift::Struct.generate_accessors self
        end

      end
    end
  end
end
